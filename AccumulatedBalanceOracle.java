/*
 * Prepay Balance Management
 * ## TMF API Reference: TMF654 - Prepay Balance Management  ### Draft : 19.5 - January 2020  The Prepay Balance Management API enables consumers to manage the balance, recharge (top-up), transfer, reserve, unreserve, deduct and balance adjustments of a  bucket. A bucket is understood in the context of this API to be an entity that keeps track of the balance available to use services. Every bucket will measure balance in different units, it can be monetary or non-monetary (e.g.: number of sms that are available, number of GB of data available, …)  ### Resources - Bucket - TopupBalance - AdjustBalance - TransferBalance - ReserveBalance - AccumulatedBalance - BalanceActionHistory  ### Operations - Retrieve the balance information on a bucket for a given product (individual or aggregated). - Retrieve the list of balance-related operations performed over a given product - Retrieve information about all the top-up operations stored in the server filtered by some criteria. - Perform a new top up operation (recharge) - Retrieve detailed information about a top-up operation previously processed by the server. - Retrieve the current and historic status information about a top-up operation previously processed by the server. - Perform a new transfer operation - Retrieve information about all the transfer operations stored in the server filtered by some criteria - Retrieve detailed information about a transfer operation previously processed by the server - Retrieve the current and historic status information about a transfer operation previously processed by the server. - Retrieve information about all the adjustments stored in the server filtered by some criteria. - Perform a new adjustment operation - Retrieve detailed information about a balance adjustment operation previously processed by the server - Reserve a balance on a bucket. - Unreserve a balance on a bucket. - Retrieve aggregated (accumulative) balances for a bucket.
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.oracle.communications.oms.brm.rest.extension.model.impl;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.oracle.communications.oms.brm.rest.model.AccumulatedBalance;
import com.oracle.communications.oms.brm.rest.model.Quantity;
import java.util.ArrayList;
import java.util.List;

/**
 * AccumulatedBalanceOracle
 */

public class AccumulatedBalanceOracle extends AccumulatedBalance  {
  @JsonProperty("billingCycleSpecification")
  private List<BillingCycleSpecificationRefOracle> billingCycleSpecification = null;

  @JsonProperty("unbilledBalance")
  private Quantity unBilledBalance = null;

  @JsonProperty("nonCurrency")
  private List<NonCurrencyDetailsOracle> nonCurrency = null;

  public AccumulatedBalanceOracle billingCycleSpecification(List<BillingCycleSpecificationRefOracle> billingCycleSpecification) {
    this.billingCycleSpecification = billingCycleSpecification;
    return this;
  }

  /**
   * Get billingCycleSpecification
   * @return billingCycleSpecification
   **/
  @JsonProperty("billingCycleSpecification")
  public List<BillingCycleSpecificationRefOracle> getBillingCycleSpecification() {
    return billingCycleSpecification;
  }

  public void setBillingCycleSpecification(List<BillingCycleSpecificationRefOracle> billingCycleSpecification) {
    this.billingCycleSpecification = billingCycleSpecification;
  }

  public AccumulatedBalanceOracle unBilledBalance(Quantity unBilledBalance) {
    this.unBilledBalance = unBilledBalance;
    return this;
  }

  /**
   * Get unBilledBalance
   * @return unBilledBalance
   **/
  @JsonProperty("unbilledBalance")
  public Quantity getUnBilledBalance() {
    return unBilledBalance;
  }

  public void setUnBilledBalance(Quantity unBilledBalance) {
    this.unBilledBalance = unBilledBalance;
  }

  public AccumulatedBalanceOracle nonCurrency(List<NonCurrencyDetailsOracle> nonCurrency) {
    this.nonCurrency = nonCurrency;
    return this;
  }

  public AccumulatedBalanceOracle addNonCurrencyItem(NonCurrencyDetailsOracle nonCurrencyItem) {
    if (this.nonCurrency == null) {
      this.nonCurrency = new ArrayList<NonCurrencyDetailsOracle>();
    }
    this.nonCurrency.add(nonCurrencyItem);
    return this;
  }

  /**
   * Get nonCurrency
   * @return nonCurrency
   **/
  @JsonProperty("nonCurrency")
  public List<NonCurrencyDetailsOracle> getNonCurrency() {
    return nonCurrency;
  }

  public void setNonCurrency(List<NonCurrencyDetailsOracle> nonCurrency) {
    this.nonCurrency = nonCurrency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccumulatedBalanceOracle accumulatedBalanceOracle = (AccumulatedBalanceOracle) o;
    return Objects.equals(this.billingCycleSpecification, accumulatedBalanceOracle.billingCycleSpecification) &&
        Objects.equals(this.unBilledBalance, accumulatedBalanceOracle.unBilledBalance) &&
        Objects.equals(this.nonCurrency, accumulatedBalanceOracle.nonCurrency) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingCycleSpecification, unBilledBalance, nonCurrency, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccumulatedBalanceOracle {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    billingCycleSpecification: ").append(toIndentedString(billingCycleSpecification)).append("\n");
    sb.append("    unbilledBalance: ").append(toIndentedString(unBilledBalance)).append("\n");
    sb.append("    nonCurrency: ").append(toIndentedString(nonCurrency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
